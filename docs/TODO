Do we add views to objects?  If so, will cause garbage.  Remove.

s/Canvas/CanvasView/

Replace getID() with .id
add isInitialized() to AbstractView

Model all views.
Rename View.get/setValue to 'value' property.

Add asserts to methods (including type-checking?).
Move extension methods out of context.js

The "FOAM Simulator" would actually make a nice view for
navigating a system's custom components.
It would show which components
had been overriden and could show which features have
enough model information to be generated.  Would be an
actual view into the Feature-Manager.  How to show for
sub-contexts?


Fix up CView hierarchy.  (DONE: Do we need an AbstractCView that 
implements 'foam.ui.View' so individual CViews can be used without
a Canvas container.)  Also, standardize position, size, rotation, 
etc.


??? What does it mean to order by a multi-value field?
  Does the record appear once for each value?
??? What if a record has value for a multi-value field?

Need a case-insensitive Index
  could be done with a Property decorator
  ie. TreeIndex(CI(Issue.status)), not good enough


ability to bind any property to a formula/function
  with decorators for things like memoization, TTL, etc.

TO-Reader
attachments
html bodies
FileDAO of Messages or Merge like Saturn
full-text search
Needs Logo
internationalization
parse multiple addresses in 'to'
needs better end-of-attachment handling so it doesn't detect and parse emails embeded as attachments in other emails


FOAM
finish IndexedDB
Node.js boot hack
Client/Server DAO
DAO Unit Tests
Feature-Oriented Migration
Generic Search Controller

Fix reloading Models in modeller.html

experiment: have models be constructor functions


UnitTest.test() doesn't appear to run on the real Object.

Allow view prototypes to be defined in the model.

Add 'units' support to DetailView.

Support HTML5 form types:
  http://html5doctor.com/html5-forms-input-types/
  http://www.w3schools.com/html/html5_form_input_types.asp

Sandbox body webview in Saturn and allow for JS executables (ie. games)

Index: could have a distribution type which doesn't actually index the data but helps to improve plan costing

implement default model_ for array properties

Add {{value}} style template binding


Remove AbstractView
Remove DetailView
Merge SummaryView into mode of DetailView
Remove old unused IO code